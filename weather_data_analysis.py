# -*- coding: utf-8 -*-
"""Weather Data Analysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1SKt6D3LlvlhpQi0f2oh_fyoUv_HEkjSG

***The Weather Dataset***

Here, The Weather Dataset is a time-series data set with per-hour information about the weather conditions at a particular location. It records Temperature, Dew Point Temperature, Relative Humidity, Wind Speed, Visibility, Pressure, and Conditions.

This data is available as a CSV file. We are going to analyze this data set using the Pandas DataFrame
"""

import pandas as pd

data = pd.read_csv("/content/Weather Data Analysis.csv.csv")

data

"""***Analyzing Data Frames***

.head()

> Shows 1st N rows of data (by default N=5)
"""

data.head()

""".shape()

Shows total no. of rows and columns of dataframe


"""

data.shape

""".index



This attribute provides the index of the dataframe

"""

data.index

""".columns

Shows name of each column

"""

data.columns

""".dtypes

It shows the data-type of each column

"""

data.dtypes

""".unique()

In a column, it shows all the unique values. It can be applied on a single column only, not on the whole dataframe
"""

data['Weather'].unique()

""".nunique()

It shows the total no. of unique values in each column. It can be applied on a single column as well as on whole dataframe.

"""

data.nunique()

""".count

It shows the total no. of non-null values in each column. It can be applied on a single column as well as on whole dataframe
"""

data.count()

"""value_counts

In a column, it shows all the unique values with their count. It can be applied on single column only.

"""

data['Weather'].value_counts ()

""".info()

Provides basic information about the dataframe.

"""

data.info()

"""***Q) 1. Find all the unique 'Wind Speed' values in the data.***"""

data.head(2)

data.nunique()

data['Wind Speed_km/h'].nunique()

data['Wind Speed_km/h'].unique()

"""***Q) 2. Find the number of times when the 'Weather is exactly Clear'.***"""

data.head (2)

data.Weather.value_counts()

data.Weather.value_counts()

data[data.Weather == 'Clear']

data.groupby('Weather').get_group('Clear')

"""***Q) 3. Find the number of times when the 'Wind Speed was exactly 4 km/h'.***"""

data.head (2)

data[data['Wind Speed_km/h'] == 4]

"""***Q. 4) Find out all the Null Values in the data.***"""

data.isnull().sum()

data.notnull().sum()

"""***Q. 5) Rename the column name 'Weather' of the dataframe to 'Weather Condition'.***"""

data.head(2)

data.rename(columns = {'Weather': 'Weather Condition'}, inplace =True)

data.head()

"""***Q.6) What is the mean 'Visibility'?***"""

data.head(2)

data.Visibility_km.mean()

"""***Q. 7) What is the Standard Deviation of 'Pressure' in this data?***"""

data.Press_kPa.std()

"""***Q. 8) Whats is the Variance of 'Relative Humidity' in this data ?***"""

data['Rel Hum_%'].var()

"""***Q. 9) Find all instances when 'Snow' was recorded.***"""

data['Weather Condition'].value_counts()

data[data['Weather Condition'] == 'Snow']

data[data['Weather Condition'].str.contains('Snow')].tail(50)

"""***Q. 10) Find all instances when 'Wind Speed is above 24' and 'Visibility is 25'.***"""

data.head (2)

data[(data['Wind Speed_km/h'] > 24) & (data['Visibility_km'] == 25)]

"""***Q. 11) What is the Mean value of each column against each 'Weather Conditon'?***"""

data.head(2)

data.groupby('Weather Condition').mean()

"""***Q. 12) What is the Minimum & Maximum value of each column against each 'Weather Conditon'?***"""

data.head(2)

data.groupby('Weather Condition').min()

data.groupby('Weather Condition').max()

"""***Q. 13) Show all the Records where Weather Condition is Fog.***"""

data[data['Weather Condition'] == 'Fog']

"""***Q. 14) Find all instances when 'Weather is Clear' or 'Visibility is above 40'.***"""

data[(data['Weather Condition'] == 'Clear') | (data['Visibility_km']> 40)]

data[(data['Weather Condition'] == 'Clear') | (data['Visibility_km']> 40)].head(50)

data[(data['Weather Condition'] == 'Clear') | (data['Visibility_km']> 40)].tail(50)

"""Q. 15) Find all instances when :


---
A. 'Weather is Clear' and 'Relative Humidity is greater than 50' or B. 'Visibility is above 40'





"""

data.head(2)

data[(data['Weather Condition'] == 'Clear') & (data['Rel Hum_%']> 50)| (data['Visibility_km'] > 40)]